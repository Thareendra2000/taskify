/* eslint-disable */ /**
 *
 * THIS FILE IS AUTOGENERATED, DO NOT EDIT IT!
 *
 * instead, edit one of the `.graphql` files in this project and run
 *
 * npm run graphql-codegen
 *
 * for this file to be re-created
 */

import * as Types from '../app/services/types.generated';

import { api } from './../app/TaskApi';
// module.hot?.accept();
export type UpdateTaskMutationVariables = Types.Exact<{
  input: Types.UpdateTaskInput;
}>;


export type UpdateTaskMutation = { __typename?: 'Mutation', updateTask?: { __typename: 'Task', id: string, title: string, description?: string } };


export const UpdateTaskDocument = `
    mutation UpdateTask($input: UpdateTaskInput!) {
  updateTask(input: $input) {
    id
    title
    description
    __typename
  }
}
    `;

const injectedRtkApi = api.injectEndpoints({
  // overrideExisting: module.hot?.status() === "apply",
  endpoints: (build) => ({
    UpdateTask: build.mutation<UpdateTaskMutation, UpdateTaskMutationVariables>({
      query: (variables) => ({ document: UpdateTaskDocument, variables })
    }),
  }),
});

export { injectedRtkApi as api };
export const { useUpdateTaskMutation } = injectedRtkApi;

