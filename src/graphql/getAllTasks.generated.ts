/* eslint-disable */ /**
 *
 * THIS FILE IS AUTOGENERATED, DO NOT EDIT IT!
 *
 * instead, edit one of the `.graphql` files in this project and run
 *
 * npm run graphql-codegen
 *
 * for this file to be re-created
 */

import * as Types from '../app/services/types.generated';

import { api } from './../app/TaskApi';
// module.hot?.accept();
export type GetAllTasksQueryVariables = Types.Exact<{ [key: string]: never; }>;


export type GetAllTasksQuery = {
    data: any; __typename?: 'Query', getAllTasks?: Array<{ __typename: 'Task', id: string, title: string, description?: string }> 
};


export const GetAllTasksDocument = `
    query GetAllTasks {
  getAllTasks {
    id
    title
    description
    __typename
  }
}
    `;

const injectedRtkApi = api.injectEndpoints({
  // overrideExisting: module.hot?.status() === "apply",
  endpoints: (build) => ({
    GetAllTasks: build.query<GetAllTasksQuery, GetAllTasksQueryVariables | void>({
      query: (variables) => ({ document: GetAllTasksDocument, variables })
    }),
  }),
});

export { injectedRtkApi as api };
export const { useGetAllTasksQuery, useLazyGetAllTasksQuery } = injectedRtkApi;

